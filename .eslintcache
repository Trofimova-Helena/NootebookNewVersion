[{"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\redux\\store.js":"4","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\NoteContainer.js":"5","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\redux\\note-reduсer.js":"6","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\PrintNote.js":"7","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\Search.js":"8"},{"size":578,"mtime":1621833348670,"results":"9","hashOfConfig":"10"},{"size":893,"mtime":1619412138708,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":455,"mtime":1621396518694,"results":"13","hashOfConfig":"10"},{"size":1625,"mtime":1621335800076,"results":"14","hashOfConfig":"10"},{"size":2561,"mtime":1621333371724,"results":"15","hashOfConfig":"10"},{"size":4895,"mtime":1621848027576,"results":"16","hashOfConfig":"10"},{"size":1266,"mtime":1621845755095,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8ciakg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\index.js",[],["37","38"],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\redux\\store.js",[],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\NoteContainer.js",[],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\redux\\note-reduсer.js",[],"C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\PrintNote.js",["39","40","41"],"import React, { useState } from 'react';\r\nimport Search from './Search';\r\nimport styles from './PrintNoteStyle.module.css';\r\nimport imgUrl from './../ProjectImages/page.jpg';\r\nimport Basket from './../ProjectImages/basket.jpg';\r\n\r\nfunction PrintNote(props) {\r\n    let [edit, setEdit] = useState(false);\r\n    let [changingNote, setChangingNote] = useState(\r\n        {\r\n            id: '',\r\n            note: props.changingNote,\r\n        });\r\n\r\n    let activateEditMode = () => {\r\n        setEdit(true);\r\n        props.UpdateChangingNote(changingNote);\r\n    }\r\n\r\n    let onMouseOverAction = (event) => {\r\n        setChangingNote({ id: event.target.id, note: event.target.innerHTML });\r\n    }\r\n\r\n    let SaveChanging = () => {\r\n        props.Save();\r\n        setEdit(false);\r\n    }\r\n\r\n    let list = props.notes.map((elem) => {\r\n        return elem;\r\n    })\r\n\r\n    let lis = list.map((el, index) => {\r\n        return <li key={el.id} className={styles.li}>\r\n            <span>\r\n                <button className={styles.btn}>\r\n                    <img src={Basket} className={styles.basket} onClick={props.DelNote} id={el.id} data-index={index} />\r\n                </button>\r\n            </span>\r\n            <span onClick={activateEditMode} onMouseOver={onMouseOverAction} id={el.id}>\r\n                {el.note}\r\n            </span>\r\n        </li>\r\n    })\r\n\r\n    let searchLis = list.map((el, ind) => {\r\n        for(let i=0; i<props.searchNotes.length; i++) {\r\n            if (props.searchNotes[i] === ind) {\r\n                return <li key={el.id} className={styles.li}>\r\n                <span>\r\n                    <button className={styles.btn}>\r\n                        <img src={Basket} className={styles.basket} onClick={props.DelNote} id={el.id} data-index={ind} />\r\n                    </button>\r\n                </span>\r\n                <span onClick={activateEditMode} onMouseOver={onMouseOverAction} id={el.id}>\r\n                    {el.note}\r\n                </span>\r\n            </li> \r\n            }\r\n        }\r\n    })\r\n\r\n    const divStyle = {\r\n        backgroundImage: 'url(' + imgUrl + ')',\r\n        height:1000,\r\n        backgroundSize: 100+ '%' + 100 + '%',\r\n      };\r\n\r\n    return <div style={divStyle}>\r\n        <Search {...props}/>\r\n\r\n        <div className={styles.container}>{props.searchNotes.length <= 0 ? \r\n            <div>\r\n                {!edit ?\r\n                    <div>\r\n                        <div className={styles.enteringText}>\r\n                            <textarea onChange={props.ChangeValue} value={props.newNotes} />\r\n                            <div>\r\n                                <button onClick={props.AddNote} className={styles.addBtn}>Добавить</button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <ul>{lis}</ul>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.enteringText}>\r\n                            <textarea value={props.changingNote.note} onChange={props.ChangeTextArrValForEdit} id={props.changingNote.id} />\r\n                            <div>\r\n                                <button onClick={SaveChanging} className={styles.addBtn}>Изменить</button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <ul>{lis}</ul>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            :\r\n\r\n            <div>\r\n                {!edit ?\r\n                    <div>\r\n                        <div className={styles.enteringText}>\r\n                            <textarea onChange={props.ChangeValue} value={props.newNotes} />\r\n                            <div>\r\n                                <button onClick={props.AddNote}>Добавить</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.titels}>\r\n                            <ul>{searchLis}</ul>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className={styles.enteringText}>\r\n                            <textarea value={props.changingNote.note} onChange={props.ChangeTextArrValForEdit} id={props.changingNote.id} />\r\n                            <div>\r\n                                <button onClick={SaveChanging}>Изменить</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.titels}>\r\n                            <ul>{searchLis}</ul>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default PrintNote;","C:\\Users\\Asus\\Desktop\\ReactStudy\\nootebook_redux\\src\\Notes\\Search.js",["42"],"import React, { useState } from 'react';\r\nimport SearchPic from './../ProjectImages/search.jpg';\r\nimport styles from './PrintNoteStyle.module.css';\r\n\r\nfunction Search(props) {\r\n    let [searchingIndex, setSearchingIndex] = useState([]);\r\n    let [searchValue, setSearchValue] = useState('');\r\n\r\n    let Searching = () => {\r\n        props.Search(searchingIndex);\r\n    }\r\n\r\n    let handleChange = (event) => {\r\n        let arrOfNotesText = [];\r\n        for (let elem of props.notes) {\r\n            arrOfNotesText.push(elem.note.toUpperCase());\r\n        }\r\n\r\n        let arr = [];\r\n        setSearchValue(event.target.value);\r\n        for(let i = 0; i < arrOfNotesText.length; i++){\r\n\t\t\tif(arrOfNotesText[i].indexOf(event.target.value.toUpperCase()) !== -1) {\r\n\t\t\t\tarr.push(i);\r\n\t\t\t\tsetSearchingIndex(arr);\r\n\t\t\t} \r\n\t\t}\r\n\r\n        if (event.target.value === '') {\r\n            arr.splice(0, arr.length);\r\n        }\r\n\t}\r\n\r\n    return (\r\n        <div className={styles.search}>\r\n                <input placeholder=\"поиск\" onChange={handleChange} value={searchValue}/>\r\n                <button onClick={Searching}>\r\n                    <img src={SearchPic} className={styles.SearchPic}/>\r\n                </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Search;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":37,"column":21,"nodeType":"49","endLine":37,"endColumn":121},{"ruleId":"50","severity":1,"message":"51","line":46,"column":40,"nodeType":"52","messageId":"53","endLine":46,"endColumn":42},{"ruleId":"47","severity":1,"message":"48","line":52,"column":25,"nodeType":"49","endLine":52,"endColumn":123},{"ruleId":"47","severity":1,"message":"48","line":37,"column":21,"nodeType":"49","endLine":37,"endColumn":72},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]